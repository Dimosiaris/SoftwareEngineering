package View;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.SwingConstants;
import javax.swing.JTextField;
import javax.crypto.EncryptedPrivateKeyInfo;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.awt.event.ActionEvent;
import javax.swing.JTextPane;
import java.awt.TextArea;
import java.awt.Color;
import javax.swing.JRadioButton;
import java.awt.Panel;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.JTextArea;
import javax.swing.border.TitledBorder;

import Model.Document;
import java.awt.SystemColor;

public class Speech2TextEditorView {

	private JFrame frame;	
	
	// The Panels
	private JPanel 				sidePanel;
	private JPanel				mainPanel;
	private SettingsPanel 		settingsPanel;
	private OpenDocPanel 		openDocPanel;
	private JLabel 				titleLabel;
	private EditDocPanel 		editDocPanel;
	private JButton 			saveButton;
	private JButton 			newDocButton;
	
	// The filename we're working on
	private String 				filename;
	private Document 			doc;
	private JButton 			btnNewButton;
	
	
	/**
	 * Launch the application.
	 */
	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Speech2TextEditorView window = new Speech2TextEditorView();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	
	public Speech2TextEditorView() {
		initialize();
	}

	/*
	 * Function that helps us change between panels
	 */
	
	public void setPanel(JPanel panel) {
		mainPanel.setVisible(false);
		openDocPanel.setVisible(false);
		editDocPanel.setVisible(false);
		settingsPanel.setVisible(false);
		
		panel.setVisible(true);
		System.out.println("DID IT");
	}
	
	/**
	 * Initialize the contents of the frame.
	 */
	
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 758, 530);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		/*
		 * 		Panels Initialization
		 */
		
		openDocPanel = new OpenDocPanel();
		openDocPanel.setBounds(214, 6, 522, 496);
		openDocPanel.setVisible(false);
		frame.getContentPane().add(openDocPanel);
		
		editDocPanel = new EditDocPanel();
		editDocPanel.setBounds(214, 6, 522, 496);
		editDocPanel.setVisible(false);
		frame.getContentPane().add(editDocPanel);
		
		settingsPanel = new SettingsPanel();
		settingsPanel.setBounds(214, 6, 522, 496);
		settingsPanel.setVisible(false);
		frame.getContentPane().add(settingsPanel);
		
		sidePanel = new JPanel();
		sidePanel.setBackground(new Color(0, 128, 128));
		sidePanel.setBounds(6, 6, 196, 496);
		frame.getContentPane().add(sidePanel);
		sidePanel.setLayout(null);
		
		TextArea startingTextArea = new TextArea();
		
/*
 * ==============================================================================================================================================================================================================
 * ==============================================================================================================================================================================================================
 * ==============================================================================================================================================================================================================
 */
		/*
		 *  		OPEN DOCUMENT BUTTON
		 */
		
		JButton openDocButton = new JButton("Open Document");
		openDocButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Command openDocument = new OpenDocumentCommand(startingTextArea.getText(), settingsPanel.getVolume(), 
															   settingsPanel.getPitch(), settingsPanel.getRate(), 
															   settingsPanel.getAPI(), settingsPanel.getEncryption());
				
				// Create the Document
				doc = new Document(filename, settingsPanel.getVolume(), settingsPanel.getPitch(), 
			  			settingsPanel.getRate(), settingsPanel.getAPI(), settingsPanel.getEncryption());
				System.out.println(settingsPanel.getVolume());
				doc.createDocumentfromPath();
				settingsPanel.setDocument(doc);
				
				String contents = "";
				try {
				      File myObj = new File(filename);
				      Scanner myReader = new Scanner(myObj);
				      while (myReader.hasNextLine()) {
				    	  String data = myReader.nextLine();
				          contents += data;
				          contents += "\n";
				      }
				      myReader.close();
				}catch (FileNotFoundException err) {
					 System.out.println("An error occurred.");
				     err.printStackTrace();
				}
				setPanel(openDocPanel);
				openDocPanel.setText(contents);
			}
		});
		openDocButton.setBounds(21, 205, 146, 29);
		sidePanel.add(openDocButton);
		
		
		/*
		 *  		EDIT DOCUMENT BUTTON
		 */
		
		JButton editDocButton = new JButton("Edit Document");
		editDocButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				filename = startingTextArea.getText();
				
				// Create the Document
				doc = new Document(filename, settingsPanel.getVolume(), settingsPanel.getPitch(), 
			  			settingsPanel.getRate(), settingsPanel.getAPI(), settingsPanel.getEncryption());
				doc.createDocumentfromPath();
				settingsPanel.setDocument(doc);
				
				String contents = "";
				try {
				      File myObj = new File(filename);
				      Scanner myReader = new Scanner(myObj);
				      while (myReader.hasNextLine()) {
				    	  String data = myReader.nextLine();
				          contents += data;
				          contents += "\n";
				      }
				      myReader.close();
				}catch (FileNotFoundException err) {
					 System.out.println("An error occurred.");
				     err.printStackTrace();
				}
				setPanel(editDocPanel);
				editDocPanel.setText(contents);
			}
		});
		editDocButton.setBounds(21, 246, 136, 29);
		sidePanel.add(editDocButton);
		
		/*
		 * 			TITLE LABEL
		 */
		titleLabel = new JLabel("TEXT 2 SPEECH");
		titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
		titleLabel.setFont(new Font("Lucida Sans Typewriter", Font.BOLD, 15));
		titleLabel.setForeground(new Color(255, 255, 240));
		titleLabel.setBounds(21, 26, 146, 47);
		sidePanel.add(titleLabel);
		
		/* 
		 * 			HOME BUTTON
		 */
		
		JButton titleButton = new JButton("Home");
		titleButton.setFont(new Font("Lucida Grande", Font.BOLD, 13));
		titleButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				setPanel(mainPanel);
			}
		});
		titleButton.setBounds(21, 97, 117, 29);
		sidePanel.add(titleButton);
		
		/*
		 *  		SAVE DOCUMENT BUTTON
		 */
		saveButton = new JButton("Save Document");
		saveButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
				      FileWriter myWriter = new FileWriter(filename);
				      myWriter.write(editDocPanel.getText());
				      myWriter.close();
				      
				      // Create the new Document
					  doc = new Document(filename, settingsPanel.getVolume(), settingsPanel.getPitch(), 
							  			settingsPanel.getRate(), settingsPanel.getAPI(), settingsPanel.getEncryption());
					  doc.createDocumentfromPath();
					
				      System.out.println("Successfully wrote to the file.");
				} catch (IOException err) {
					  System.out.println("An error occurred.");
					  err.printStackTrace();
				}
			}
		});
		saveButton.setBounds(21, 310, 146, 29);
		sidePanel.add(saveButton);
		
		
		/*
		 * 			NEW DOCUMENT BUTTON
		 */
		
		newDocButton = new JButton("New Document");
		newDocButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
	
				filename = startingTextArea.getText();
				try {
					File myObj = new File(filename);
				    if (myObj.createNewFile()) {
				        System.out.println("File created: " + myObj.getName());
				    } else {
				        System.out.println("File already exists.");
				    }
				} catch (IOException err) {
				      System.out.println("An error occurred.");
				      err.printStackTrace();
			    }
			}
		});
		newDocButton.setBounds(21, 164, 136, 29);
		sidePanel.add(newDocButton);
	
		
		/*
		 * 			ENCRYPTED CHECK BOX
		 */
		
		JCheckBox encryptedCheckBox = new JCheckBox("Encrypted");
		encryptedCheckBox.setBounds(21, 392, 128, 23);
		sidePanel.add(encryptedCheckBox);
		
		
		/* 
		 * 			DOC TO SPEECH BUTTON
		 */
		
		JButton doc2SpeechButton = new JButton("Document to speech");
		doc2SpeechButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(doc != null) {
					if(encryptedCheckBox.isSelected()) {
						doc.playEncodedContents();
					}
					else {
						doc.playContents();
					}
				}else {
					System.out.println("An error occurred. There is no document open or in edit.");
				}
			}
		});
		doc2SpeechButton.setToolTipText("Start talking");
		doc2SpeechButton.setBounds(21, 351, 169, 29);
		sidePanel.add(doc2SpeechButton);
		
		
		/* 
		 * 			SETTINGS BUTTON
		 */
		
		btnNewButton = new JButton("Settings");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				setPanel(settingsPanel);
			}
		});
		btnNewButton.setFont(new Font("Lucida Grande", Font.BOLD, 13));
		btnNewButton.setForeground(Color.DARK_GRAY);
		btnNewButton.setBackground(Color.WHITE);
		btnNewButton.setBounds(21, 427, 117, 29);
		sidePanel.add(btnNewButton);
		mainPanel = new JPanel();
		mainPanel.setBackground(UIManager.getColor("MenuBar.disabledForeground"));
		mainPanel.setBounds(214, 65, 522, 437);
		frame.getContentPane().add(mainPanel);
		mainPanel.setLayout(null);
		mainPanel.setVisible(true);
		
		
		startingTextArea.setText("abc.txt");
		startingTextArea.setBounds(0, 0, 522, 437);
		mainPanel.add(startingTextArea);		
		
		
		
	}

	public String getFilename() {
		return filename;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	public Document getDoc() {
		return doc;
	}

	public void setDoc(Document doc) {
		this.doc = doc;
	}

	public SettingsPanel getSettingsPanel() {
		return settingsPanel;
	}

	public void setSettingsPanel(SettingsPanel settingsPanel) {
		this.settingsPanel = settingsPanel;
	}

	public JPanel getMainPanel() {
		return mainPanel;
	}

	public void setMainPanel(JPanel mainPanel) {
		this.mainPanel = mainPanel;
	}

	public OpenDocPanel getOpenDocPanel() {
		return openDocPanel;
	}

	public void setOpenDocPanel(OpenDocPanel openDocPanel) {
		this.openDocPanel = openDocPanel;
	}

	public EditDocPanel getEditDocPanel() {
		return editDocPanel;
	}

	public void setEditDocPanel(EditDocPanel editDocPanel) {
		this.editDocPanel = editDocPanel;
	}
}
