package View;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Scanner;

import javax.swing.JFrame;
import javax.swing.JTextField;

import Model.Line;

import java.awt.BorderLayout;

public class OpenDocumentCommand implements ActionListener{

	private JFrame frame;
	private JTextField documentField;
	private JTextField textFieldInput;
	private String path;
	/**
	 * Launch the application.
	 */
	
	public OpenDocumentCommand(JTextField textFieldInput) {
		this.textFieldInput = textFieldInput;
		initialize();
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					OpenDocumentCommand window = new OpenDocumentCommand();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		path = textFieldInput.getText();
		
		try {
			File file = new File(path); 
			String filename = file.getAbsolutePath();
			FileReader filereader = new FileReader(filename);
			BufferedReader br = new BufferedReader(filereader);
			documentField.read(br, null);
			br.close();
			documentField.requestFocus();
		}
		catch(Exception e){  
			e.printStackTrace(); 
		}
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 462);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		documentField = new JTextField();
		documentField.setBounds(45, 19, 346, 396);
		frame.getContentPane().add(documentField);
		documentField.setColumns(10);
	}


	
}
